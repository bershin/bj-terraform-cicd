steps:
  - id: 'Grab secrets'
    waitFor: [-]
    name: "gcr.io/bj-terraform-cicd/$_IMAGE_NAME:stable"
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        set -e
         # Grab the Terraform Service Account from secrets manager for this project
         echo "Deploying to GCP project $PROJECT_ID"
         gcloud secrets versions access latest --secret="jenkins-$PROJECT_ID-key" --project bj-credentials > /workspace/tf_sa.json

         # Activate Terraform SA
         gcloud auth activate-service-account --key-file tf_sa.json
         echo "Looking for ssh keys for rljenkins user (jenkins-rldeploy-key)"
         gcloud secrets versions access latest --secret="bj-eng-github-token" > /workspace/git.token
         gcloud secrets versions access latest --secret="jenkins-bjdeploy-key" --project bj-credentials > /workspace/bjdeploy-key

  - id: 'Get Git SHA for this PR'
    waitFor: ['Grab secrets']
    name: "gcr.io/bj-terraform-cicd/$_IMAGE_NAME:stable"
    entrypoint: 'sh'
    args:
      - '-c'
      - |
         set -e

         git clone https://$(cat /workspace/git.token)@github.com/bershin/bj-terraform-cicd.git tf
         cd tf
         git checkout $COMMIT_SHA
         git rev-parse --short 'HEAD^{tree}' > /workspace/tree_sha

  - id: 'Check for Build Locks'
    waitFor: ['Grab secrets']
    name: "gcr.io/bj-terraform-cicd/$_IMAGE_NAME:stable"
    entrypoint: 'sh'
    args:
      - '-c'
      - |
          set -e
          /scripts/lock-build.sh $PROJECT_ID
          exit 0

  - id: 'TF Apply (Previous Build)'
    waitFor: ['Check for Build Locks']
    name: "gcr.io/bj-terraform-cicd/$_IMAGE_NAME:stable"
    entrypoint: 'sh'
    args:
      - '-c'
      - |
         set -e

         cd /
         cp /workspace/tf_sa.json /tf_sa.json
         if ! /scripts/apply_network_tf_locally.sh $PROJECT_ID ; then
           echo "Terraform Apply failed - aborting build"
           /scripts/unlock-build $PROJECT_ID
           exit 1
         fi

substitutions:
  _IMAGE_NAME: bj-cicd-terraform